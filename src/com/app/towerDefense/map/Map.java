package com.app.towerDefense.map;

import java.awt.Point;

import com.app.towerDefense.models.MapModel;

public class Map {
 
	public String mapValidations(MapModel mapModel)
	{
		String routeStatus= null;
		if(!mapModel.isEntryDone || mapModel.getEntryPoint() == null)
		{
			routeStatus="Please First Select an Entry Point.";
			mapModel.setMapAutoGeneratedDescription(routeStatus);
		}
		
		else if(!mapModel.isExitDone || mapModel.getExitPoint() == null)
		{
			routeStatus="Please First Select an Exit Point.";
			mapModel.setMapAutoGeneratedDescription(routeStatus);
		}
			
		else 
		{
			routeStatus=mapPathValidation(mapModel);
			if(routeStatus.contains("Success"))
			{
				mapModel.setMapAutoGeneratedDescription(routeStatus);
				routeStatus=null;
			}
			else
			{
				mapModel.setMapAutoGeneratedDescription(routeStatus);
			}
		}
	
		return routeStatus;
		
	}
	
	public enum E_MapValidationDirecton {
	    Initial, Up, Down, Left, Right 
	}
	
	public String mapPathValidation(MapModel map)
	{
		int mapWidth = map.getMapWidth();
		int mapHeight = map.getMapHeight();
		Point entryPoint = map.getEntryPoint();
		Point exitPoint = map.getExitPoint();
		int mapPathCellCount=1;//for Entry Point
		int mapRoutCount=0;//map rout count
		String status="";
		int i = entryPoint.x;
		int j = entryPoint.y;
		E_MapValidationDirecton dirUpDown =E_MapValidationDirecton.Initial;
		E_MapValidationDirecton dirLeftRight =E_MapValidationDirecton.Initial;
		while ((i>=0 && i<mapHeight) || (j>=0 && j< mapWidth)) {
			
			int cellValue=0;
			int connectedCellFound=0;
			
			//Checking for Down cell
			if(i < mapHeight && (dirUpDown==E_MapValidationDirecton.Initial || dirUpDown == E_MapValidationDirecton.Down))
			{
				cellValue= map.getMapGridSelection()[i+1][j];			
				if(cellValue == 1)
				{
					i++;
					mapPathCellCount++;
					connectedCellFound++;
					dirUpDown = E_MapValidationDirecton.Down;
				}
				else if(cellValue== 3) //Check if it is Exit point
				{
					dirUpDown = E_MapValidationDirecton.Down;
					if(mapPathCellCount <= 2)
					{
						mapPathCellCount++;
						connectedCellFound++;
						status="Error:Cells:"+mapPathCellCount+":Map is not correct has only Entry and Exit points.";
						break;
					}
					else
					{
						mapPathCellCount++;
						connectedCellFound++;
						status="Success:Cells:"+mapPathCellCount+"";
						break;
					}						
				}
			}
					
			//Checking For Up Cell
			if(i > 0 && (dirUpDown==E_MapValidationDirecton.Initial || dirUpDown == E_MapValidationDirecton.Up))
			{
				cellValue= map.getMapGridSelection()[i-1][j];	
				if(cellValue== 1)
				{
					i--;
					mapPathCellCount++;
					connectedCellFound++;
					dirUpDown = E_MapValidationDirecton.Up;
				}
				else if(cellValue== 3)
				{
					dirUpDown = E_MapValidationDirecton.Up;
					if(mapPathCellCount <= 2)
					{
						mapPathCellCount++;
						connectedCellFound++;
						status="Error:Cells:"+mapPathCellCount+":Map is not correct has only Entry and Exit points.";
						break;
					}
					else
					{
						mapPathCellCount++;
						connectedCellFound++;
						status="Success:Cells:"+mapPathCellCount+"";
						break;
					}
				}
			}
			
			
			//Checking for Left cell
			if(j < mapWidth && (dirLeftRight==E_MapValidationDirecton.Initial || dirLeftRight == E_MapValidationDirecton.Left))
			{
				cellValue= map.getMapGridSelection()[i][j+1];			
				if(cellValue == 1)
				{
					j++;
					mapPathCellCount++;
					connectedCellFound++;
					dirLeftRight = E_MapValidationDirecton.Left;
				}
				else if(cellValue== 3) //Check if it is Exit point
				{
					dirLeftRight = E_MapValidationDirecton.Left;
					if(mapPathCellCount <= 2)
					{
						mapPathCellCount++;
						connectedCellFound++;
						status="Error:Cells:"+mapPathCellCount+":Map is not correct has only Entry and Exit points.";
						break;
					}
					else
					{
						mapPathCellCount++;
						connectedCellFound++;
						status="Success:Cells:"+mapPathCellCount+"";
						break;
					}
				}
			}
			
			
			//Checking For Right Cell
			if(j > 0 && (dirLeftRight==E_MapValidationDirecton.Initial || dirLeftRight == E_MapValidationDirecton.Right))
			{
				cellValue= map.getMapGridSelection()[i][j-1];	
				if(cellValue== 1)
				{
					j--;
					mapPathCellCount++;
					connectedCellFound++;
					dirLeftRight = E_MapValidationDirecton.Right;
				}
				else if(cellValue== 3)
				{
					dirLeftRight = E_MapValidationDirecton.Right;
					if(mapPathCellCount <= 2)
					{
						mapPathCellCount++;
						connectedCellFound++;
						status="Error:Cells:"+mapPathCellCount+":Map is not correct has only Entry and Exit points.";
						break;
					}
					else
					{
						mapPathCellCount++;
						connectedCellFound++;
						status="Success:Cells:"+mapPathCellCount+"";
						break;
					}
				}
			}
			if(connectedCellFound == 0)
			{
				status="Error:Cells"+mapPathCellCount+":Map is not Connected";
				break;
			}
			
			
			
		}
		
		
		return status;
	}
}
